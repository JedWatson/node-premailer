0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.1.62
3 info using node@v0.8.11
4 verbose publish [ '.' ]
5 verbose read json /Users/Jed/Development/Node/node-premailer/package.json
6 verbose cache add [ '.', null ]
7 silly cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { pathname: '.', path: '.', href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /Users/Jed/.npm/3a52ce78-.lock
11 verbose read json package.json
12 verbose tar pack [ '/var/folders/c_/lqyf8fms07572my8jqrrqcfc0000gn/T/npm-98433/1350961856773-0.6869791485369205/tmp.tgz',
12 verbose tar pack   '.' ]
13 verbose tarball /var/folders/c_/lqyf8fms07572my8jqrrqcfc0000gn/T/npm-98433/1350961856773-0.6869791485369205/tmp.tgz
14 verbose folder .
15 info prepublish premailer-api@1.0.0
16 silly lockFile 21669b73-56773-0-6869791485369205-tmp-tgz /var/folders/c_/lqyf8fms07572my8jqrrqcfc0000gn/T/npm-98433/1350961856773-0.6869791485369205/tmp.tgz
17 verbose lock /var/folders/c_/lqyf8fms07572my8jqrrqcfc0000gn/T/npm-98433/1350961856773-0.6869791485369205/tmp.tgz /Users/Jed/.npm/21669b73-56773-0-6869791485369205-tmp-tgz.lock
18 silly lockFile 21669b73-56773-0-6869791485369205-tmp-tgz /var/folders/c_/lqyf8fms07572my8jqrrqcfc0000gn/T/npm-98433/1350961856773-0.6869791485369205/tmp.tgz
19 verbose tar unpack /var/folders/c_/lqyf8fms07572my8jqrrqcfc0000gn/T/npm-98433/1350961856773-0.6869791485369205/tmp.tgz
20 silly lockFile 9127b6aa-56773-0-6869791485369205-package /var/folders/c_/lqyf8fms07572my8jqrrqcfc0000gn/T/npm-98433/1350961856773-0.6869791485369205/package
21 verbose lock /var/folders/c_/lqyf8fms07572my8jqrrqcfc0000gn/T/npm-98433/1350961856773-0.6869791485369205/package /Users/Jed/.npm/9127b6aa-56773-0-6869791485369205-package.lock
22 silly gunzTarPerm modes [ '755', '644' ]
23 silly gunzTarPerm extractEntry package.json
24 silly gunzTarPerm extractEntry .npmignore
25 silly gunzTarPerm extractEntry README.md
26 silly gunzTarPerm extractEntry LICENSE
27 silly gunzTarPerm extractEntry premailer.js
28 verbose read json /var/folders/c_/lqyf8fms07572my8jqrrqcfc0000gn/T/npm-98433/1350961856773-0.6869791485369205/package/package.json
29 silly lockFile 9127b6aa-56773-0-6869791485369205-package /var/folders/c_/lqyf8fms07572my8jqrrqcfc0000gn/T/npm-98433/1350961856773-0.6869791485369205/package
30 verbose from cache /var/folders/c_/lqyf8fms07572my8jqrrqcfc0000gn/T/npm-98433/1350961856773-0.6869791485369205/package/package.json
31 verbose tar pack [ '/Users/Jed/.npm/premailer-api/1.0.0/package.tgz',
31 verbose tar pack   '/var/folders/c_/lqyf8fms07572my8jqrrqcfc0000gn/T/npm-98433/1350961856773-0.6869791485369205/package' ]
32 verbose tarball /Users/Jed/.npm/premailer-api/1.0.0/package.tgz
33 verbose folder /var/folders/c_/lqyf8fms07572my8jqrrqcfc0000gn/T/npm-98433/1350961856773-0.6869791485369205/package
34 silly lockFile 6f1d1253--premailer-api-1-0-0-package-tgz /Users/Jed/.npm/premailer-api/1.0.0/package.tgz
35 verbose lock /Users/Jed/.npm/premailer-api/1.0.0/package.tgz /Users/Jed/.npm/6f1d1253--premailer-api-1-0-0-package-tgz.lock
36 silly lockFile 6f1d1253--premailer-api-1-0-0-package-tgz /Users/Jed/.npm/premailer-api/1.0.0/package.tgz
37 silly lockFile 620959de--npm-premailer-api-1-0-0-package /Users/Jed/.npm/premailer-api/1.0.0/package
38 verbose lock /Users/Jed/.npm/premailer-api/1.0.0/package /Users/Jed/.npm/620959de--npm-premailer-api-1-0-0-package.lock
39 silly lockFile 620959de--npm-premailer-api-1-0-0-package /Users/Jed/.npm/premailer-api/1.0.0/package
40 verbose tar unpack /Users/Jed/.npm/premailer-api/1.0.0/package.tgz
41 silly lockFile 620959de--npm-premailer-api-1-0-0-package /Users/Jed/.npm/premailer-api/1.0.0/package
42 verbose lock /Users/Jed/.npm/premailer-api/1.0.0/package /Users/Jed/.npm/620959de--npm-premailer-api-1-0-0-package.lock
43 silly gunzTarPerm modes [ '755', '644' ]
44 silly gunzTarPerm extractEntry package.json
45 silly gunzTarPerm extractEntry .npmignore
46 silly gunzTarPerm extractEntry README.md
47 silly gunzTarPerm extractEntry LICENSE
48 silly gunzTarPerm extractEntry premailer.js
49 verbose read json /Users/Jed/.npm/premailer-api/1.0.0/package/package.json
50 silly lockFile 620959de--npm-premailer-api-1-0-0-package /Users/Jed/.npm/premailer-api/1.0.0/package
51 silly shasum updated bytes 3039
52 info shasum 90ff27beda6f47ed9cd8a0d7cdbaa384f18cd7ea
52 info shasum /Users/Jed/.npm/premailer-api/1.0.0/package.tgz
53 verbose from cache /Users/Jed/.npm/premailer-api/1.0.0/package/package.json
54 verbose chmod /Users/Jed/.npm/premailer-api/1.0.0/package.tgz 644
55 verbose chown /Users/Jed/.npm/premailer-api/1.0.0/package.tgz [ 501, 20 ]
56 silly lockFile 3a52ce78- .
57 silly publish { name: 'premailer-api',
57 silly publish   version: '1.0.0',
57 silly publish   description: 'Node wrapper for the Premailer API (premailer.dialect.ca/api)',
57 silly publish   homepage: 'https://github.com/JedWatson/node-premailer',
57 silly publish   author: { name: 'Jed Watson', email: 'jed.watson@gmail.com' },
57 silly publish   keywords: [ 'premailer', 'css', 'email', 'api', 'inliner', 'newsletter' ],
57 silly publish   main: 'premailer.js',
57 silly publish   dependencies: { request: '~2.11.4', underscore: '~1.4.2' },
57 silly publish   engines: { node: '>0.8.*' },
57 silly publish   repository:
57 silly publish    { type: 'git',
57 silly publish      url: 'https://github.com/JedWatson/node-premailer.git' },
57 silly publish   bugs: { url: 'https://github.com/timrwood/moment/issues' },
57 silly publish   license: 'MIT',
57 silly publish   readme: 'node-premailer\n==============\n\nA simple api wrapper for http://premailer.dialect.ca, a great tool for inlining css before you send an email.\n\nnode-premailer simplifies api integration by calling the Premailer API to inline css styles (and opther options such as removing comments, classes and ids), then retrieving the generated html and text from their respective URLs before passing them to your callback.\n\n\n## Install\n\n<pre>\n  npm install premailer-api\n</pre>\n\nOr from source:\n\n<pre>\n  git clone git://github.com/JedWatson/node-premailer.git \n  cd node-premailer\n  npm link\n</pre>\n\n## Usage\n\n```javascript\nvar premailer = require(\'premailer-api\');\n\nvar emailTemplate = \'\n  <html>\n    <head>\n      <title>My Email</title>\n      <style type="text/css">\n        a { color: #336699; }\n      </style>\n    </head>\n    <body>\n      Styles inlined with \n      <a href="http://premailer.dialect.ca">Premailer</a> via \n      <a href="https://github.com/JedWatson/node-premailer">node-premailer</a>.\n    </body>\n  <html>\';\n\npremailer.prepare({html: emailTemplate }, function(err, email) {\n  res.send(email.html);\n});\n```\n\n## Options\n\n- premailerAPI (string)\n  The URL of the premailer API. If you\'re running your own, replace this. Defaults to http://premailer.dialect.ca/api/0.1/documents\n- html (string)\n  The html of the email to parse and inline styles.\n- url (string)\n  The url of the email to fetch then parse and inline styles.\n- fetchHTML (boolean)\n  Whether to fetch the parsed HTML (you\'ll usually want this). Defaults to true.\n- fetchText (boolean)\n  Whether to fetch the auto-generated text version (disable this if you are providing your own). Defaults to true.\n- See http://premailer.dialect.ca/api for full list of options. All options have aliases for node.js style variable names.\n  - adapter\n  - baseUrl || base_url\n  - lineLength || line_length\n  - linkQueryString || link_query_string\n  - preserveStyles || preserve_styles\n  - removeIds || remove_ids\n  - removeClasses || remove_classes\n  - removeComments || remove_comments\n\n\n## License and Credits\n\nMIT Licensed. Copyright Jed Watson 2012.\n\nA big thankyou to [Dialect](http://dialect.ca) for Premailer, and for making the API freely available.\n\nThere\'s also a web version available here: http://premailer.dialect.ca\n\nAnd you can check out the source code for Premailer itself here: https://github.com/alexdunae/premailer/\n\n',
57 silly publish   _id: 'premailer-api@1.0.0',
57 silly publish   dist: { shasum: '90ff27beda6f47ed9cd8a0d7cdbaa384f18cd7ea' } }
58 verbose url raw premailer-api
59 verbose url resolving [ 'https://registry.npmjs.org/', './premailer-api' ]
60 verbose url resolved https://registry.npmjs.org/premailer-api
61 info trying registry request attempt 1 at 14:11:00
62 http PUT https://registry.npmjs.org/premailer-api
63 http 409 https://registry.npmjs.org/premailer-api
64 verbose url raw premailer-api
65 verbose url resolving [ 'https://registry.npmjs.org/', './premailer-api' ]
66 verbose url resolved https://registry.npmjs.org/premailer-api
67 info trying registry request attempt 1 at 14:11:02
68 http GET https://registry.npmjs.org/premailer-api
69 http 200 https://registry.npmjs.org/premailer-api
70 error publish fail Cannot publish over existing version.
70 error publish fail Bump the 'version' field, set the --force flag, or
70 error publish fail     npm unpublish 'premailer-api@1.0.0'
70 error publish fail and try again
71 error System Darwin 12.2.0
72 error command "node" "/usr/local/bin/npm" "publish"
73 error cwd /Users/Jed/Development/Node/node-premailer
74 error node -v v0.8.11
75 error npm -v 1.1.62
76 error code EPUBLISHCONFLICT
77 verbose exit [ 1, true ]
